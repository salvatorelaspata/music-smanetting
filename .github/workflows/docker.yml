name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run linter
      working-directory: ./frontend
      run: npm run lint
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  test-processing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      working-directory: ./processing
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Python imports
      working-directory: ./processing
      run: python -c "import src.pdf_utils; import src.detection; print('All imports successful')"

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-processing]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false
        tags: music-scanner-frontend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build processing Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./processing
        file: ./processing/Dockerfile
        push: false
        tags: music-scanner-processing:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker Compose
      run: |
        echo "Testing docker-compose configuration..."
        docker-compose config
        echo "Docker Compose configuration is valid!"
