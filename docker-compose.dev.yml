version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: deps  # Stop at deps stage for development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5001
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    depends_on:
      - processing
    restart: unless-stopped
    networks:
      - music-scanner-network

  processing:
    build:
      context: ./processing
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=server.py
      - PORT=5001
      - MONGO_URI=mongodb://mongo:27017/
      - S3_ENDPOINT_URL=http://minio:9000
      - S3_PUBLIC_URL=http://localhost:9000
      - S3_ACCESS_KEY_ID=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET_NAME=sheetmusic
    volumes:
      - ./processing:/app
      - processing_uploads:/app/uploads
      - processing_output:/app/output
    restart: unless-stopped
    depends_on:
      - mongo
      - minio
    networks:
      - music-scanner-network

  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - music-scanner-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - music-scanner-network
    restart: unless-stopped

networks:
  music-scanner-network:
    driver: bridge

volumes:
  processing_uploads:
    driver: local
  processing_output:
    driver: local
  mongodb_data:
    driver: local
  minio_data:
    driver: local
